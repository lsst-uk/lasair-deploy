---

- name: deploy stack

  hosts: localhost
  gather_facts: False

  vars_files:
    - settings.yaml

  vars:
    template: heat_template.yaml

  tasks:

    - name: create stack
      register: stack_create
      openstack.cloud.stack:
        name: "{{ os.stack_name }}"
        state: present
        template: "{{ template }}"
        parameters:
          image_id: "{{ os.image_name }}"
          key_name: "{{ os.keypair_name }}"
          net: "{{ os.network_name }}"
          share_net: "{{ os.share_network_name }}"
          share_size: "{{ share_size }}"
          share_user: "{{ os.share_user }}"
          fast_volume_type: "{{ os.fast_volume_type }}"
          slow_volume_type: "{{ os.slow_volume_type }}"
          cassandra_volume_size: "{{ instances.cassandra.volume_size }}"
          kafka_pub_size: "{{ instances.kafka_pub.volume_size }}"
          n_kafka: "{{ instances.kafka.number|default(1) }}"
          n_ingest: "{{ instances.ingest.number|default(1) }}"
          n_sherlock: "{{ instances.sherlock.number|default(1) }}"
          n_filter: "{{ instances.filter.number|default(1) }}"
          n_cassandra: "{{ instances.cassandra.number|default(1) }}"
          n_frontend_db: "{{ instances.frontend_db.number|default(0) }}"
          n_backend_db: "{{ instances.backend_db.number|default(0) }}"
          create_db: "{{ instances.db.create|default(true) }}"
          create_cluster_control: "{{ instances.cluster_control.create|default(false) }}"
          create_kafka_pub: "{{ instances.kafka_pub.create|default(true) }}"
          create_svc: "{{ instances.svc.create|default(true) }}"
          create_web: "{{ instances.web.create|default(true) }}"
          flavor_small: "{{ os.flavor_small }}"
          flavor_medium: "{{ os.flavor_medium }}"
          flavor_large: "{{ os.flavor_large }}"
          flavor_xlarge: "{{ os.flavor_xlarge }}"
          flavor_kafka: "{{ os.flavor_kafka }}"

    - name: update exports.yaml
      template:
        src: exports.yaml.j2
        dest: exports.yaml

#    - name: update exports.yaml
#      lineinfile:
#        path: exports.yaml
#        regexp: "exports"
#        line: "  exports: {{ item }}"
#      loop: |
#        [
#        {%- for output in stack_create.stack.outputs %}
#          {%- if output.description == "Export locations" %}
#            {{ output.output_value | regex_replace('\[(.*)\]', '\1')  }}, 
#          {%- endif %}
#        {%- endfor %}
#        ]

    - name: update /etc/hosts
      become: true
      lineinfile:
        path: /etc/hosts
        regexp: '\s{{ item.hostname }}$'
        line: "{{ item.address }} {{ item.hostname }}"
      loop: |
        [
        {%- for output in stack_create.stack.outputs %}
          {%- if output.description == "Private IP" %}
            {%- if output.output_value %}
              { 'address': '{{ output.output_value }}', 'hostname': '{{ os.stack_name }}-{{ output.output_key }}' },
            {%- endif %}
          {%- endif %}
          {%- if output.description == "Private IP list" %}
            {%- for address in output.output_value %}
              { 'address': '{{ address }}', 'hostname': '{{ os.stack_name }}-{{ output.output_key }}-{{ loop.index0 }}' },
            {%- endfor %}
          {%- endif %}
        {%- endfor %}
        ]

    - name: add sections to inventory
      ansible.builtin.lineinfile:
        path: hosts
        line: "[{{ item }}]"
      loop: "{{ instances | list }}"

    - name: add hosts to inventory
      ini_file:
        path: hosts
        section: "{{ item.role }}"
        allow_no_value: true
        option: "{{ os.stack_name }}-{{ item.role }}{{ item.suffix }}"
      loop: |
        [
        {%- for role,values in instances.items() %}
          {%- if values.number is defined %}
            {%- for i in range(0, values.number) %}
              { 'role': '{{ role }}', 'suffix': '-{{ i }}' },
            {%- endfor %}
          {%- elif values.create %}
            { 'role': '{{ role }}', 'suffix': '' },
          {%- endif %}
        {%- endfor %}
        ]
      loop_control:
        label: "{{ os.stack_name }}-{{ item.role }}{{ item.suffix }}"

    # We don't currently have dedicated instances for proxy and api roles
    # so add these to the web server
    - name: add extra roles in inventory
      ini_file:
        path: hosts
        section: "{{ item }}"
        allow_no_value: true
        option: "{{ os.stack_name }}-web"
      with_items:
        - proxy
        - api

