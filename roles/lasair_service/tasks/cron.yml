---

- name: "Check the cron daemon is installed"
  become: true
  apt:
    name:  cron
    state: present

- name: "Check the cron daemon is enabled and started"
  become: true
  service:
    enabled: true
    name:  cron
    state: started

# Polls the TNS for new entries (22 past midnight)
- name: "Crontab for TNS"
  cron:
    name:   "Poll TNS"
    user:   "{{ ansible_env.USER }}"
    minute: '10'
    hour:   '0'
    job:    "(cd {{ ansible_env.HOME }}/lasair4/services/externalBrokers/TNS; python3 tns_runner.py)"

# Dump the crossmatch_tns table to CephFS (30 past midnight)
- name: "Crontab to dump crossmatch_tns"
  cron:
    name:   "Dump crossmatch_tns"
    user:   "{{ ansible_env.USER }}"
    minute: '22'
    hour:   '0'
    job:    "(cd {{ ansible_env.HOME }}/lasair4/services; python3 crossmatch_tns_dump.py)"

# Dump the annotations table to CephFS (4 past midnight)
- name: "Crontab to dump annotations"
  cron:
    name:   "Dump annotations"
    user:   "{{ ansible_env.USER }}"
    minute: '26'
    hour:   '0'
    job:    "(cd {{ ansible_env.HOME }}/lasair4/services; python3 annotations_dump.py)"

# Build MOCs from any updated watchlists from master MySQL to CephFS where filter nodes can see them (8 past midnight)
- name: "Crontab to build MOCs"
  cron:
    name:   "Build MOCs"
    user:   "{{ ansible_env.USER }}"
    minute: '30'
    hour:   '0'
    job:    "(cd {{ ansible_env.HOME }}/services; python3 make_watchlist_files.py"

# Copy any updated area files (MOC) from master MySQL to CephFS where filter nodes can see them (12 minutes past midnight)
- name: "Crontab for area files"
  cron:
    name:   "Copy area files"
    user:   "{{ ansible_env.USER }}"
    minute: '34'
    hour:   '0'
    job:    "(cd {{ ansible_env.HOME }}/services; python3 make_area_files.py"

