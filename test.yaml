# Various tests to validate that Lasair is deployed correctly

---

- hosts: all
  gather_facts: false
  tasks:
    - name: Ping all hosts
      ping:
      tags: ping

- hosts: localhost
  gather_facts: false
  vars_files:
    - settings.yaml
  vars:
    settings: "{{ lookup('hashi_vault', 'secret='+vault.path+'/settings url='+vault.url)}}"

  tasks:

    # network connectivity tests
    - name: kafka listening on port 9092
      command: nc -z "{{ item }}" 9092
      loop: "{{ groups['kafka'] }}"
      tags: net, kafka

    - name: kafka_pub listening on port 9092
      command: nc -z "{{ item }}" 9092
      loop: "{{ groups['kafka_pub'] }}"
      tags: net, kafka

    - name: kafka_pub listening on port 29092
      command: nc -z "{{ item }}" 29092
      loop: "{{ groups['kafka_pub'] }}"
      tags: net, kafka

    - name: web server listening on port 80
      command: nc -z "{{ item }}" 80
      loop: "{{ groups['web'] }}"
      tags: net, web

    - name: web server listening on port 8080
      command: nc -z "{{ item }}" 8080
      loop: "{{ groups['web'] }}"
      tags: net, web

    - name: db server listening on port 3306
      command: nc -z "{{ item }}" 3306
      loop: "{{ groups['db'] + groups['backend_db'] + groups['frontend_db'] }}"
      tags: net, db

    - name: sherlock service listening on port 80
      command: nc -z "{{ item }}" 80
      loop: "{{ groups['sherlock'] }}"
      tags: net, sherlock

    # database tests
    - name: validate object db schema
      command: python3 check_schema.py --user={{ settings.master_db_readonly_username }} --password={{ settings.master_db_readonly_password }} --host={{ item }} --port=3306 --url=https://raw.githubusercontent.com/lsst-uk/lasair-lsst/main/utility/schema/objects.json
      loop: "{{ groups['db'] + groups['backend_db'] + groups['frontend_db'] }}"
      tags: db

    # kafka tests
    - name: set kafka test str
      set_fact: kafka_test_str="{{ lookup('community.general.random_string', special=false) }}"
      tags: kafka

    - name: test kafka produce
      shell: "echo {{ kafka_test_str }} | kafkacat -q -b {{ item }}:9092 -t deploy_test -P -p 0"
      loop: "{{ groups['kafka'] }}"
      tags: kafka

    - name: test kafka consume
      shell: "kafkacat -q -b {{ item }}:9092 -t deploy_test -C -o -1 -c 1 -p 0"
      register: kafka_output
      loop: "{{ groups['kafka'] }}"
      tags: kafka

    - name: check kafka output
      assert:
        that: "item == kafka_test_str"
        quiet: true
      loop: "{{ kafka_output.results | map(attribute='stdout') | list }}"
      tags: kafka

    # webserver tests
    - name: check we can get home page
      ansible.builtin.uri:
        url: "http://{{ item }}:8080"
      #loop: "{{ groups['web'] }}"
      loop: 
        - 10.65.0.198
      tags: web

    - name: check static file content
      assert:
        that: >
          "{{ lookup('url', 'http://'+item+':8080/lasair/static/css/lasair-web.css', split_lines=false) | hash('md5') }}"
          ==
          "{{ lookup('url', 'https://raw.githubusercontent.com/lsst-uk/lasair-lsst-web/main/src/lasair-webapp/lasair/staticfiles/css/lasair-web.css', split_lines=false) | hash('md5') }}"
        quiet: true
      #loop: "{{ groups['web'] }}"
      loop: 
        - 10.65.0.198
      tags: web

